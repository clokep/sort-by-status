<?xml version="1.0"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this file,
   - You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!DOCTYPE bindings [
  <!ENTITY % instantbirdDTD SYSTEM "chrome://instantbird/locale/instantbird.dtd" >
  %instantbirdDTD;
]>

<bindings id="sortByStatusGroupBindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="sortByStatusGroup" extends="chrome://instantbird/content/group.xml#group">
    <implementation implements="nsIObserver">
      <!-- Takes as input two contact elements (imIContact type) and compares
         - their nicknames alphabetically (case insensitive). This method
         - behaves as a callback that Array.sort accepts as a parameter.
         -->
      <method name="sortComparator">
        <parameter name="aContactA"/>
        <parameter name="aContactB"/>
        <body>
        <![CDATA[
          let order;
          if (!aContactA.statusType && !aContactB.statusType)
            order = 0;
          else if (!aContactA.statusType)
            order = 1;
          else if (!aContactB.statusType)
            order = -1;
          else
            order = aContactB.statusType - aContactA.statusType;

          // If they're the same status, compare the names.
          if (!order) {
            let a = aContactA.displayName.toLowerCase();
            let b = aContactB.displayName.toLowerCase();
            order = a.localeCompare(b);
          }

          return order;
        ]]>
        </body>
      </method>

      <!-- nsIObserver implementation -->
      <method name="observe">
        <parameter name="aSubject"/>
        <parameter name="aTopic"/>
        <parameter name="aData"/>
        <body>
        <![CDATA[
          this.__proto__.__proto__.call(this, aSubject, aTopic, aData);
          if (this.showOffline && (aTopic == "contact-added" ||
                                   aTopic == "contact-moved-in") ||
              !this.showOffline && aSubject.online &&
              (aTopic == "contact-availability-changed" ||
               aTopic == "contact-added" ||
               aTopic == "contact-moved-in")) {
            this.addContact(aSubject);
            this._updateGroupLabel();
            return;
          }

          if (aTopic == "contact-no-longer-dummy") {
            let oldId = parseInt(aData);
            if (this.contactsById.hasOwnProperty(oldId)) {
              let contact = this.contactsById[oldId];
              delete this.contactsById[oldId];
              this.contactsById[contact.contact.id] = contact;
            }
            return;
          }

          if (aTopic == "contact-display-name-changed") {
            this.updateContactPosition(aSubject);
            return;
          }

          if (aTopic == "tag-hidden") {
            this.setAttribute("collapsing", "true");
            this.addEventListener("transitionend", this._transitionEnd, true);
            for each (let contact in this.contacts) {
              contact.state = "collapsing";
              contact.finishRemoveNode();
            }
            return;
          }

          // Everything above here is from Instantbird's group.xml file. XBL
          // doesn't support calling a parent's methods.
          if (aTopic == "contact-status-changed") {
            this.updateContactPosition(aSubject);
            return;
          }
        ]]>
        </body>
      </method>
    </implementation>
  </binding>
</bindings>
